{"version":3,"sources":["redux/constants/Constants.js","components/Nav.js","redux/actions/CleanLoginDetails.js","redux/actions/LoginAction.js","components/Register.js","redux/actions/UpdatePosts.js","SocketConfig.js","components/Login.js","redux/actions/UpdateAmount.js","redux/actions/UpdateQuantity.js","components/Invest.js","components/Ranking.js","components/Profile.js","redux/actions/SetPosts.js","components/Posts.js","App.js","redux/actions/UpdateRanking.js","reportWebVitals.js","redux/reducers/LoginReducer.js","redux/reducers/UpdateRankingReducer.js","redux/reducers/PostsReducer.js","redux/Store.js","index.js"],"names":["Update_LoginData","Update_Quantity","Update_Amount","Update_Ranking","Update_Posts","Set_Posts","Clean_LoginDetails","Nav","dispatch","useDispatch","className","to","onClick","console","log","type","href","class","elem","document","querySelectorAll","links","querySelector","st","style","display","i","length","margin","position","top","right","justifyContent","LoginAction","param","payload","Register","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","history","useHistory","a","json","JSON","stringify","amount","axios","post","res","data","success","push","alert","labels","getElementsByTagName","value","id","required","autocomplete","onChange","e","target","UpdatePosts","socket","openSocket","withCredentials","extraHeaders","Login","get","params","on","_id","obj","useSelector","state","LoginReducer","UpdateAmount","UpdateQuantity","Invest","coinNumbers","setCoinNumbers","loginCredentials","getElementById","coin","coinPrice","temp","totalInvestment","usd","coins","name","totalCoins","quantity","newAmount","userData","followersId","followers","patch","updateUserAmount","newQuantity","selected","disabled","placeholder","Ranking","ranks","UpdateRankingReducer","map","rank","index","pathname","details","handleClick","toFixed","Profile","loginDetails","show","location","useLocation","showBtn","setShowBtn","followerId","userId","response","src","SetPosts","Posts","posts","PostsReducer","filterPosts","useEffect","GetPosts","date","time","Date","toUTCString","action","App","rankings","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","updateamount","newstate","update","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.87f6cd8f.chunk.js","sourcesContent":["export const Update_LoginData = 'Update_LoginData';\r\nexport const Update_Quantity = 'Update_Quantity';\r\nexport const Update_Amount = 'Update_Amount';\r\nexport const Update_Ranking = 'Update_Ranking';\r\nexport const Update_Posts = 'Update_Posts';\r\nexport const Set_Posts = 'Set_Posts';\r\nexport const Clean_LoginDetails = 'Clean_LoginDetails';","import React from 'react'\r\nimport './Css/Nav.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {CleanLoginDetails} from '../redux/actions/CleanLoginDetails'\r\n\r\nexport default function Nav() {\r\n    const dispatch = useDispatch()\r\n\r\n    const hamburgerClicked = () =>{\r\n        let elem=document.querySelectorAll('.nav-container-lists')\r\n        let links = document.querySelector('.nav-container-links')\r\n     \r\n\r\n        console.log(elem)\r\n        // document.querySelector('.icon').style.display()\r\n        let st=\"block\"\r\n        if(elem[0].style.display===\"block\")\r\n                st=\"none\"\r\n        for(let i=0; i<elem.length;i++){\r\n            elem[i].style.display=st\r\n            elem[i].style.margin=\"0px\"\r\n            }\r\n          links.style.position=\"relative\"\r\n          links.style.top=\"13rem\"\r\n          links.style.right=\"-30px\"\r\n          links.style.justifyContent=\"center\"\r\n        //   links.style.backgroundcolor=\"red\"\r\n        //   icon.style.right=\"2rem\"\r\n        \r\n    }\r\n    const handleLogout = () =>{\r\n        console.log(\"logout called...\")\r\n        dispatch(CleanLoginDetails())\r\n    }\r\n    return (\r\n        <div className=\"nav-container\">\r\n                <p className=\"nav-container-logo\">CryptoMedia</p>\r\n          \r\n            <div className=\"nav-container-links\">\r\n                <p className=\"nav-container-lists\"><Link to=\"/home\" className=\"nav-container-links new\">Home</Link></p>\r\n                <p className=\"nav-container-lists\"><Link to=\"/invest\" className=\"nav-container-links new\">Invest</Link></p>\r\n                <p className=\"nav-container-lists\"><Link to=\"/ranking\" className=\"nav-container-links new\">Ranking</Link></p>\r\n                <p className=\"nav-container-lists\"><Link to=\"/profile\" className=\"nav-container-links new\">Profile</Link></p>\r\n                <p className=\"nav-container-lists\"><Link to=\"/\" className=\"nav-container-links new\" onClick={handleLogout}>Logout</Link></p>\r\n              \r\n               \r\n            </div>\r\n            <a href=\"#\" class=\"icon\" onClick={hamburgerClicked}>\r\n                <i class=\"fa fa-bars\"></i>\r\n             </a>\r\n        </div>\r\n    )\r\n}\r\n","import {Clean_LoginDetails} from '../constants/Constants'\r\n\r\nexport const CleanLoginDetails = () =>\r\n{\r\n    return{\r\n        type:Clean_LoginDetails\r\n\r\n    }\r\n}","import {Update_LoginData} from '../constants/Constants'\r\n\r\nexport const LoginAction = (param) =>\r\n{\r\n    return{\r\n        type:Update_LoginData,\r\n        payload:param\r\n\r\n    }\r\n}","import {React,useState} from 'react'\r\nimport './Css/Register.css'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\nimport {LoginAction} from '../redux/actions/LoginAction'\r\n\r\n\r\nfunction Register() {\r\n   \r\n  const [firstName,setFirstName] = useState('')\r\n   const [lastName,setLastName] = useState('')\r\n   const [email,setEmail] = useState('')\r\n   const [password,setPassword] = useState('')\r\n   const history = useHistory()\r\n\r\n   const dispatch = useDispatch()\r\n   \r\n   async function handleSignup()\r\n   {\r\n     const amount = 100000\r\n     const json = JSON.stringify({firstName,lastName,email,password,amount})\r\n    \r\n          try{\r\n            const res = await axios.post('http://localhost:8000/api/register',\r\n             { json }\r\n            )\r\n            if(res.data.success)\r\n            {\r\n              console.log(res.data)\r\n                dispatch(LoginAction(res.data))\r\n                history.push(\"/home\")\r\n            }\r\n            else\r\n            {\r\n              alert(\"Invalid Email...\")\r\n            }\r\n\r\n          }\r\n          catch(err)\r\n          {\r\n            console.log(err)\r\n          }\r\n      let labels = document.getElementsByTagName('input')\r\n      for(let i=0; i<labels.length; i++)\r\n          labels[i].value=\"\"\r\n  \r\n\r\n   }\r\n\r\n    return (\r\n        <div class=\"form\">\r\n      \r\n      <ul class=\"tab-group\">\r\n        <li class=\"tab active\"><a href=\"#signup\">Sign Up</a></li>\r\n        <li class=\"tab\"><Link to=\"/login\">Log In</Link></li>\r\n      </ul>\r\n      \r\n      <div class=\"tab-content\">\r\n        <div id=\"signup\">   \r\n          <h1>Sign Up</h1>\r\n          \r\n          <div class=\"top-row\">\r\n            <div class=\"field-wrap\">\r\n              <label>\r\n                First Name<span class=\"req\">*</span>\r\n              </label>\r\n              <input type=\"text\" required autocomplete=\"off\" onChange={(e)=>{setFirstName(e.target.value)}}/>\r\n            </div>\r\n        \r\n            <div class=\"field-wrap\">\r\n              <label>\r\n                Last Name<span class=\"req\">*</span>\r\n              </label>\r\n              <input type=\"text\"required autocomplete=\"off\" onChange={(e)=>{setLastName(e.target.value)}}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"field-wrap\">\r\n            <label>\r\n              Email Address<span class=\"req\">*</span>\r\n            </label>\r\n            <input type=\"email\" required autocomplete=\"off\" onChange={(e)=>{setEmail(e.target.value)}}/>\r\n          </div>\r\n          \r\n          <div class=\"field-wrap\">\r\n            <label>\r\n              Set A Password<span class=\"req\">*</span>\r\n            </label>\r\n            <input type=\"password\" required autocomplete=\"off\" onChange={(e)=>{setPassword(e.target.value)}} />\r\n          </div>\r\n          \r\n          <button  class=\"button button-block\" onClick={handleSignup}>Get Started</button>\r\n          \r\n    \r\n\r\n        </div>\r\n        \r\n        <div id=\"login\">   \r\n          <h1>Welcome Back!</h1>\r\n          \r\n         \r\n          \r\n            <div class=\"field-wrap\">\r\n            <label>\r\n              Email Address<span class=\"req\">*</span>\r\n            </label>\r\n            <input type=\"email\"required autocomplete=\"off\"/>\r\n          </div>\r\n          \r\n          <div class=\"field-wrap\">\r\n            <label>\r\n              Password<span class=\"req\">*</span>\r\n            </label>\r\n            <input type=\"password\"required autocomplete=\"off\"/>\r\n          </div>\r\n          \r\n          <p class=\"forgot\"><a href=\"#\">Forgot Password?</a></p>\r\n          \r\n          <button class=\"button button-block\">Log In</button>\r\n          \r\n         \r\n\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import {Update_Posts} from '../constants/Constants'\r\n\r\nexport const UpdatePosts = (param) =>\r\n{\r\n    return{\r\n        type:Update_Posts,\r\n        payload:param\r\n\r\n    }\r\n}","// const socket = socketIOClient(\"http://localhost:8000\",{\r\n//         withCredentials: true,\r\n//         extraHeaders: {\r\n//           \"my-custom-header\": \"abcd\"\r\n//         }})\r\n//         socket.on(\"ranking\",rankings=>{\r\n//           // console.log(rankings)\r\n//             dispatch(UpdateRanking(rankings))\r\n            \r\n//         })\r\n//         if(loginDetails.length>0)\r\n//         {\r\n//         socket.on(loginDetails.data._id,data=>{\r\n//           console.log(data)\r\n//           dispatch(UpdatePosts(data))\r\n//         })\r\n//         }\r\n\r\nimport openSocket from 'socket.io-client';\r\n\r\nconst socket = openSocket(\"http://localhost:8000\",{\r\n    withCredentials: true,\r\n    extraHeaders: {\r\n      \"my-custom-header\": \"abcd\"\r\n    }});\r\n\r\nexport default socket;","import {React,useState} from 'react'\r\nimport './Css/Register.css'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {LoginAction} from '../redux/actions/LoginAction'\r\nimport {UpdatePosts} from '../redux/actions/UpdatePosts'\r\nimport socket from '../SocketConfig'\r\n\r\nfunction Login() {\r\n\r\n  const [email,setEmail] = useState('')\r\n  const [password,setPassword] = useState('')\r\n  \r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const loginCredentials = useSelector(state => state.LoginReducer)\r\n  async function handleLogin()\r\n   {\r\n     const json = JSON.stringify({email,password})\r\n      // const json = {email,password}\r\n          try{\r\n            const res = await axios.get('http://localhost:8000/api/login',{\r\n             params:{ json }\r\n            \r\n            }\r\n            )\r\n            console.log(res)\r\n            if(res.data.success)\r\n            {\r\n              // console.log(loginCredentials)\r\n              socket.on(res.data.data[0]._id,data=>{\r\n                  console.log(\"check hereer . .. .\")\r\n                  console.log(data)\r\n                dispatch(UpdatePosts(data))})\r\n                console.log(res.data)\r\n                const obj = {success:res.data.success,data:res.data.data[0]}\r\n                console.log(obj)\r\n                dispatch(LoginAction(obj))\r\n                history.push(\"/home\")\r\n          \r\n            }\r\n            else\r\n            {\r\n                alert(\"Invalid Credentials...\")\r\n            }\r\n\r\n          }\r\n          catch(err)\r\n          {\r\n            console.log(err)\r\n          }\r\n      let labels = document.getElementsByTagName('input')\r\n      for(let i=0; i<labels.length; i++)\r\n          labels[i].value=\"\"\r\n  }\r\n    return (\r\n       \r\n        <div id=\"login\">\r\n             <ul class=\"tab-group\">\r\n        <li class=\"tab active\"><Link to=\"/\">Sign Up</Link></li>\r\n        <li class=\"tab\"><Link to=\"/login\">Log In</Link></li>\r\n      </ul>   \r\n        <h1>Welcome Back!</h1>\r\n   \r\n     <div class=\"field-wrap\">\r\n          <label>\r\n            Email Address<span class=\"req\">*</span>\r\n          </label>\r\n          <input type=\"email\" required autocomplete=\"off\" onChange={e=>{setEmail(e.target.value)}}/>\r\n        </div>\r\n        \r\n        <div class=\"field-wrap\">\r\n          <label>\r\n            Password<span class=\"req\">*</span>\r\n          </label>\r\n          <input type=\"password\" required autocomplete=\"off\" onChange={e=>{setPassword(e.target.value)}}/>\r\n        </div>\r\n        \r\n        <p class=\"forgot\"><a href=\"#\">Forgot Password?</a></p>\r\n        \r\n        <button class=\"button button-block\" onClick={handleLogin}>Log In</button>\r\n        \r\n       </div>\r\n\r\n   \r\n    )\r\n}\r\n\r\nexport default Login\r\n","import {Update_Amount} from '../constants/Constants'\r\n\r\nexport const UpdateAmount = (param) =>\r\n{\r\n    console.log(param)\r\n    return{\r\n        type:Update_Amount,\r\n        payload:param\r\n\r\n    }\r\n}","import {Update_Quantity} from '../constants/Constants'\r\n\r\nexport const UpdateQuantity = (param) =>\r\n{\r\n    return{\r\n        type:Update_Quantity,\r\n        payload:param\r\n\r\n    }\r\n}","import {React,useState} from 'react'\r\nimport './Css/Invest.css'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport {useDispatch} from 'react-redux'\r\nimport {UpdateAmount} from '../redux/actions/UpdateAmount'\r\nimport {UpdateQuantity} from '../redux/actions/UpdateQuantity'\r\n\r\n\r\nfunction Invest() {\r\n    \r\n    const [coinNumbers,setCoinNumbers] = useState(0)\r\n    const loginCredentials = useSelector(state=>state.LoginReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    async function handleSell()\r\n    {\r\n        const elem = document.getElementById('slct')\r\n        const coin = elem.value\r\n        if(coin===\"Choose an option\")\r\n        {\r\n            alert(\"Please choose a coin to invest...\")\r\n        }\r\n        else\r\n        {\r\n            if(coinNumbers>0)\r\n            {\r\n                const coinPrice = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${coin}&vs_currencies=usd`)\r\n                console.log(coinPrice.data)\r\n                const temp = coinPrice.data\r\n                \r\n                const totalInvestment = (temp[coin].usd)*coinNumbers\r\n                for(let i=0; i<loginCredentials.data.coins.length; i++)\r\n                {\r\n                    if(loginCredentials.data.coins[i].name===coin)\r\n                            var totalCoins = loginCredentials.data.coins[i].quantity\r\n                }\r\n                if(coinNumbers>totalCoins)\r\n                {\r\n                    alert(\"you Dont have enough coins...\")\r\n                } \r\n                else\r\n                {\r\n                    const newAmount = loginCredentials.data.amount+totalInvestment\r\n                    console.log(loginCredentials)\r\n                    console.log(newAmount)\r\n                    const userData = JSON.stringify({'firstName':loginCredentials.data.firstName,'lastName':loginCredentials.data.lastName,'id':loginCredentials.data._id,'amount':newAmount,'coin':coin,'quantity':coinNumbers, 'FollowersId':loginCredentials.data.followersId, 'followers':loginCredentials.data.followers})\r\n                    console.log(userData)\r\n                    const updateUserAmount = await axios.patch('http://localhost:8000/api/SellCoin',{\r\n                        userData\r\n                    })\r\n                    if(updateUserAmount.data.success)\r\n                    {\r\n                        console.log(updateUserAmount)\r\n                        alert(\"you have successfully sold the coins...\")\r\n                        console.log(loginCredentials)\r\n                        let temp = {newAmount,coin}\r\n                        dispatch(UpdateAmount(temp))\r\n                        temp = {coinNumbers:updateUserAmount.data.newQuantity, coin}\r\n                        dispatch(UpdateQuantity(temp))\r\n                        console.log(loginCredentials)\r\n                    }\r\n                }\r\n                console.log(coinPrice)\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleInvest()\r\n    {\r\n        const elem = document.getElementById('slct')\r\n        const coin = elem.value\r\n        if(coin===\"Choose an option\")\r\n        {\r\n            alert(\"Please choose a coin to invest...\")\r\n        }\r\n        else\r\n        {\r\n            if(coinNumbers>0)\r\n            {\r\n                const coinPrice = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${coin}&vs_currencies=usd`)\r\n                console.log(coinPrice.data)\r\n                const temp = coinPrice.data\r\n                \r\n                const totalInvestment = (temp[coin].usd)*coinNumbers\r\n                if(totalInvestment>loginCredentials.data.amount)\r\n                {\r\n                    alert(\"you Dont have enough credits...\")\r\n                } \r\n                else\r\n                {\r\n                    const newAmount = loginCredentials.data.amount-totalInvestment\r\n                    console.log(loginCredentials)\r\n                    console.log(newAmount)\r\n                    const userData = JSON.stringify({'firstName':loginCredentials.data.firstName,'lastName':loginCredentials.data.lastName,'id':loginCredentials.data._id,'amount':newAmount,'coin':coin,'quantity':coinNumbers, 'FollowersId':loginCredentials.data.followersId, 'followers':loginCredentials.data.followers})\r\n                    console.log(userData)\r\n                    const updateUserAmount = await axios.patch('http://localhost:8000/api/updateAmount',{\r\n                        userData\r\n                    })\r\n                    if(updateUserAmount.data.success)\r\n                    {\r\n                        console.log(updateUserAmount)\r\n                        alert(\"you have successfully bought the coins...\")\r\n                        console.log(loginCredentials)\r\n                        let temp = {newAmount,coin}\r\n                        dispatch(UpdateAmount(temp))\r\n                        temp = {coinNumbers:updateUserAmount.data.newQuantity, coin}\r\n                        dispatch(UpdateQuantity(temp))\r\n                        console.log(loginCredentials)\r\n                    }\r\n                }\r\n                console.log(coinPrice)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"invest-container\">\r\n            <div className=\"invest-container-head\">\r\n                Invest In Crypto\r\n            </div>\r\n            <div class=\"select\">\r\n                <select name=\"slct\" id=\"slct\">\r\n                    <option selected disabled>Choose an option</option>\r\n                    <option value=\"bitcoin\">Bitcoin</option>\r\n                    <option value=\"ethereum\">Ethereum</option>\r\n                </select>\r\n            </div>\r\n                <input type=\"number\" placeholder=\"Number of coins...\" className=\"coin-input\" onChange={(e)=>{setCoinNumbers(e.target.value)}} />\r\n            <div className=\"button-container-body\">\r\n                <button className=\"button-container-invest\" onClick={handleInvest}>Buy</button>\r\n                <button className=\"button-container-invest\" onClick={handleSell}>Sell</button>\r\n            </div>\r\n         \r\n          </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Invest\r\n","import {useSelector} from 'react-redux'\r\nimport {React,useState} from 'react'\r\nimport './Css/Ranking.css'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction Ranking() {\r\n    // http://192.168.0.102:8000\r\n    const history = useHistory()\r\n    const ranks = useSelector(state=>state.UpdateRankingReducer)\r\n    const [rankNumber , setRankNumber]  = useState(1)\r\n    // const socket = socketIOClient(\"http://127.0.0.1:8000\")\r\n    const handleClick = (rank) =>{\r\n        history.push({\r\n            pathname:'/profile',\r\n            details:{\r\n                data:rank\r\n            }\r\n        })\r\n    }\r\n    console.log(ranks)\r\n    return (\r\n        <div className=\"ranks-container\">\r\n            {\r\n                ranks.map((rank,index)=>(\r\n                        <div className=\"rank\" key={rank._id} onClick={()=>handleClick(rank)}>\r\n                            <p className=\"rank-para\">\r\n                            <span className=\"rank-number\">{++index}</span>\r\n                            {rank.firstName} {rank.lastName}</p>\r\n                            <p className=\"rank-para amount\">${rank.amount.toFixed(3)}</p>\r\n                        </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ranking\r\n","import {React,useState} from 'react'\r\nimport './Css/Profile.css'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {useLocation} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { LoginAction } from '../redux/actions/LoginAction'\r\n\r\nfunction Profile() {\r\n    var loginDetails = useSelector(state => state.LoginReducer)\r\n    const id = loginDetails.data._id\r\n    var show = false\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const [showBtn,setShowBtn] = useState(true)\r\n    if(location.details)\r\n    {\r\n        if(id!==location.details.data._id)\r\n        {\r\n                show=true\r\n            // setShowBtn(true)\r\n        }\r\n        loginDetails=location.details\r\n        console.log(loginDetails)\r\n        const followers = loginDetails.data.followersId\r\n        for(let i=0; i<followers.length; i++)\r\n        {\r\n            console.log(id)\r\n            console.log(followers[i].id)\r\n            if(id===followers[i].id)\r\n            {\r\n                show=false\r\n                // setShowBtn(false)\r\n                \r\n            }\r\n        }\r\n    }\r\n    async function handleClick(){\r\n            const data = JSON.stringify({\r\n                followerId:id, //Person that is sending request to follow 'x'\r\n                userId:loginDetails.data._id // 'x'\r\n            })\r\n            try{\r\n                const response = await axios.post('http://localhost:8000/api/followreq',{data})\r\n                console.log(response)\r\n                if(response.data.success)\r\n                { \r\n                    setShowBtn(false)\r\n                    show=false\r\n                    // document.querySelector('.profile-head-buttonContainer').remove()\r\n                    // dispatch(LoginAction(response.data))\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err)\r\n            }\r\n    }\r\n    return (\r\n        <div className=\"profile-container\">\r\n            \r\n            <div className=\"profile-head\">\r\n                <div className=\"profile-head-picContainer\">\r\n                    <img src={`https://ui-avatars.com/api/?name=${loginDetails.data.firstName}+${loginDetails.data.lastName}`} className=\"profile-head-pic\"/>\r\n                </div>\r\n                <div className=\"profile-head-details\">\r\n                    <p className=\"profile-p v2\">{`${loginDetails.data.firstName} ${loginDetails.data.lastName}`}</p>\r\n                </div>\r\n                {show&&showBtn?\r\n                    <div className=\"profile-head-buttonContainer\">\r\n                        <button className=\"button-container-invest followbtn\" onClick={handleClick}>Follow</button>\r\n                    </div>:null\r\n                }\r\n            </div>\r\n            \r\n            <div className=\"profile-details\">\r\n                <div className=\"profile-details-info\">\r\n                    <h6 className=\"profile-h6\">Full Name</h6>\r\n                    <p className=\"profile-p\">\r\n                        {`${loginDetails.data.firstName} ${loginDetails.data.lastName}`}\r\n                    </p>\r\n                </div>\r\n                <div className=\"profile-details-info\">\r\n                    <h6 className=\"profile-h6\">Followers</h6>\r\n                    <p className=\"profile-p\">\r\n                        {loginDetails.data.followers}\r\n                    </p>\r\n                </div>\r\n                <div className=\"profile-details-info\">\r\n                    <h6 className=\"profile-h6\">Total Amount</h6>\r\n                    <p className=\"profile-p\">\r\n                        {`${loginDetails.data.amount.toFixed(3)}`}\r\n                    </p>\r\n                </div>\r\n                <div className=\"profile-details-info coin\">\r\n                    <h6 className=\"profile-h6 coinheading\">Coins</h6>\r\n                    <div className=\"coin-details\">\r\n                        <h6 className=\"profile-h6\">Bitcoin</h6>\r\n                        <p className=\"profile-p\">\r\n                            {`${loginDetails.data.coins[0].quantity}`}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"coin-details\">\r\n                        <h6 className=\"profile-h6\">Ethereum</h6>\r\n                        <p className=\"profile-p\">\r\n                            {`${loginDetails.data.coins[1].quantity}`}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import {Set_Posts} from '../constants/Constants'\r\n\r\nexport const SetPosts = (param) =>\r\n{\r\n    return{\r\n        type:Set_Posts,\r\n        payload:param\r\n\r\n    }\r\n}","import {React,useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport './Css/Posts.css'\r\nimport {SetPosts} from '../redux/actions/SetPosts'\r\n\r\nfunction Posts() {\r\n\r\n    // const [posts,setPosts] = useState([])\r\n    const dispatch = useDispatch()\r\n\r\n    var loginCredentials = useSelector(state => state.LoginReducer)\r\n    var posts = useSelector(state => state.PostsReducer)\r\n\r\n   useEffect(() => {\r\n        GetPosts()\r\n\r\n   }, [])\r\n\r\n   async function GetPosts(){\r\n\r\n        loginCredentials = JSON.stringify(loginCredentials)\r\n        const response = await axios.get('http://localhost:8000/api/posts',{params:{loginCredentials}})\r\n        // setPosts(response.data.filterPosts)\r\n        dispatch(SetPosts(response.data.filterPosts))\r\n\r\n   }\r\n\r\n   const formatDate = (date) =>{\r\n        const newdate = new Date(date)\r\n        return newdate.toUTCString()\r\n   }\r\n\r\n    return (\r\n        <div className=\"posts-container\">\r\n            {\r\n                posts.map(post=>(<div className=\"post\">\r\n                    <div className=\"post-head\">\r\n                        <div className=\"profile-head-picContainer postcontainerpic\">\r\n                            <img src={`https://ui-avatars.com/api/?name=${post.firstName}+${post.lastName}`} className=\"profile-head-pic postpic\"/>\r\n                        </div>\r\n                        <div className=\"name-container\">\r\n                            <p className=\"p-posts\">{post.firstName} {post.lastName}</p>\r\n                            <p className=\"p-posts\">{formatDate(post.time)}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"post-body\">\r\n                        <p className=\"p-posts\">{post.firstName} {post.action}s {post.quantity} {post.coin}</p>\r\n                    </div>\r\n                </div>))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import './App.css';\nimport Nav from './components/Nav'\nimport Register from './components/Register'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Login from './components/Login'\nimport Invest from './components/Invest'\nimport Ranking from './components/Ranking'\nimport Profile from './components/Profile'\nimport Posts from './components/Posts'\nimport {useSelector,useDispatch} from 'react-redux'\nimport {useEffect} from 'react'\n// import socketIOClient from 'socket.io-client'\nimport {UpdateRanking} from './redux/actions/UpdateRanking'\n\nimport socket from './SocketConfig'\n\nfunction App() {\n  const loginDetails =  useSelector(state=>state.LoginReducer)\n  \n  console.log(loginDetails) \n  const dispatch = useDispatch()\n  useEffect(() => {\n    socket.on(\"ranking\",rankings=>{\n            console.log(rankings)\n              dispatch(UpdateRanking(rankings))\n  \n          })\n\n}, [])\n  return (\n    \n    <Router>\n    \n    {!loginDetails.success?\n\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Register />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </div>\n      \n      :\n     \n     <div className=\"App\">\n       \n       <Nav/>\n    \n     <Switch>\n   \n       <Route path=\"/home\">\n          <Posts />\n        </Route>\n\n        <Route path=\"/invest\">\n          <Invest/>\n        </Route>\n      \n        <Route path=\"/ranking\">\n          <Ranking/>\n        </Route>\n\n        <Route path=\"/profile\">\n          <Profile/>\n        </Route>\n\n      </Switch>\n      \n      </div>}\n    \n    </Router>\n  );\n}\n\nexport default App;\n","import {Update_Ranking} from '../constants/Constants'\r\n\r\nexport const UpdateRanking = (param) =>\r\n{\r\n    return{\r\n        type:Update_Ranking,\r\n        payload:param\r\n\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { Update_LoginData } from \"../constants/Constants\";\r\nimport { Update_Quantity } from \"../constants/Constants\";\r\nimport { Update_Amount } from \"../constants/Constants\";\r\nimport { Clean_LoginDetails } from \"../constants/Constants\";\r\n\r\nconst initialState = []\r\n\r\nexport const LoginReducer = (state = initialState , action) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case Update_LoginData:\r\n            return state=action.payload\r\n        case Update_Quantity:\r\n            return update(state,action.payload)\r\n        case Update_Amount:\r\n            return updateamount(state,action.payload)\r\n        case Clean_LoginDetails:\r\n            return state = []\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst updateamount = (state, data)=>{\r\n    const newstate=state\r\n    newstate.data.amount=data.newAmount\r\n    return newstate\r\n}\r\n\r\nconst update = (state,data)=>{\r\n    const coin = state.data.coins\r\n    for(let i=0; i<coin.length; i++)\r\n    {\r\n        if(coin[i].name===data.coin)\r\n        {\r\n            coin[i].quantity=data.coinNumbers\r\n        }   \r\n    }\r\n    state.data.coins=coin\r\n    return state\r\n}","\r\nimport { Update_Ranking } from \"../constants/Constants\";\r\n\r\nconst initialState = []\r\n\r\nexport const UpdateRankingReducer = (state = initialState , action) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case Update_Ranking:\r\n            return state=action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","\r\nimport { Update_Posts } from \"../constants/Constants\";\r\nimport {Set_Posts} from \"../constants/Constants\"\r\n\r\nconst initialState = []\r\n\r\nexport const PostsReducer = (state = initialState , action) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case Set_Posts:\r\n            return state=action.payload\r\n        case Update_Posts:\r\n            return [action.payload,...state]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {createStore,combineReducers} from 'redux'\r\nimport {LoginReducer} from './reducers/LoginReducer'\r\nimport {UpdateRankingReducer} from './reducers/UpdateRankingReducer'\r\nimport {PostsReducer} from './reducers/PostsReducer'\r\n\r\nconst rootReducer = combineReducers(\r\n    {\r\n        LoginReducer,\r\n        UpdateRankingReducer,\r\n        PostsReducer\r\n    }\r\n)\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {store} from './redux/Store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}